//// <auto-generated />
//using System;
//using GreenHouse.Web.Context;
//using Microsoft.EntityFrameworkCore;
//using Microsoft.EntityFrameworkCore.Infrastructure;
//using Microsoft.EntityFrameworkCore.Metadata;
//using Microsoft.EntityFrameworkCore.Migrations;
//using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

//#nullable disable

//namespace GreenHouse.Web.Migrations.CoreDb
//{
//    [DbContext(typeof(CoreDbContext))]
//    [Migration("20240106054955_Add-UserGreenhouseHall-Table")]
//    partial class AddUserGreenhouseHallTable
//    {
//        /// <inheritdoc />
//        protected override void BuildTargetModel(ModelBuilder modelBuilder)
//        {
//#pragma warning disable 612, 618
//            modelBuilder
//                .HasAnnotation("ProductVersion", "7.0.14")
//                .HasAnnotation("Relational:MaxIdentifierLength", 128);

//            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

//            modelBuilder.Entity("GreenHouse.DomainEntitty.Identity.ApplicationUser", b =>
//                {
//                    b.Property<string>("Id")
//                        .HasColumnType("nvarchar(450)");

//                    b.Property<int>("AccessFailedCount")
//                        .HasColumnType("int");

//                    b.Property<string>("ConcurrencyStamp")
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<string>("Email")
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<bool>("EmailConfirmed")
//                        .HasColumnType("bit");

//                    b.Property<string>("FirstName")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<bool>("IsActive")
//                        .HasColumnType("bit");

//                    b.Property<bool>("IsDeleted")
//                        .HasColumnType("bit");

//                    b.Property<string>("LastName")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<bool>("LockoutEnabled")
//                        .HasColumnType("bit");

//                    b.Property<DateTimeOffset?>("LockoutEnd")
//                        .HasColumnType("datetimeoffset");

//                    b.Property<string>("NationalCodeId")
//                        .IsRequired()
//                        .HasMaxLength(10)
//                        .HasColumnType("nvarchar(10)");

//                    b.Property<string>("NormalizedEmail")
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<string>("NormalizedUserName")
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<string>("PasswordHash")
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<string>("PhoneNumber")
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<bool>("PhoneNumberConfirmed")
//                        .HasColumnType("bit");

//                    b.Property<string>("SecurityStamp")
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<bool>("TwoFactorEnabled")
//                        .HasColumnType("bit");

//                    b.Property<string>("UserName")
//                        .HasColumnType("nvarchar(max)");

//                    b.HasKey("Id");

//                    b.ToTable("ApplicationUser");
//                });

//            modelBuilder.Entity("GreenHouse.DomainEntitty.UserGreenhouseHallEntity", b =>
//                {
//                    b.Property<int>("ID")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("int")
//                        .HasColumnOrder(0);

//                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

//                    b.Property<string>("CreatedBy")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(max)")
//                        .HasColumnOrder(100);

//                    b.Property<DateTime>("CreationTime")
//                        .HasColumnType("datetime2")
//                        .HasColumnOrder(102);

//                    b.Property<string>("HallName")
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<DateTime>("LastModificationTime")
//                        .HasColumnType("datetime2")
//                        .HasColumnOrder(103);

//                    b.Property<string>("LastModifiedBy")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(max)")
//                        .HasColumnOrder(101);

//                    b.Property<string>("UserID")
//                        .HasColumnType("nvarchar(450)");

//                    b.HasKey("ID");

//                    b.HasIndex("UserID");

//                    b.ToTable("UserGreenhouseHall");
//                });

//            modelBuilder.Entity("GreenHouse.DomainEntitty.UserGreenhouseHallEntity", b =>
//                {
//                    b.HasOne("GreenHouse.DomainEntitty.Identity.ApplicationUser", "ApplicationUser")
//                        .WithMany()
//                        .HasForeignKey("UserID");

//                    b.Navigation("ApplicationUser");
//                });
//#pragma warning restore 612, 618
//        }
//    }
//}
